// @file typography.scss


// establishing some vertical rhythm for no type elements
// use this on margin bottom etc.
$vert-line-height: $line-height * 1em;

body,
button,
input,
select,
textarea {
  // Size is not declared: assumed to be set by browser (default 16px)
  // and our Reset, which declares font-size: 100%
  color: $color-text;
  font-family: $font-sans;
  font-weight: $font-weight-normal;
  line-height: $line-height;
}

a {
  transition: $default-transition;

  @include touch-hover('idle') {
    color: $color-link;
    text-decoration: none;
  }

  // Note: The text-decoration declaration is not animatable.
  // It will not respond to the transition() that we have above.
  @include touch-hover('hover') {
    color: $color-hover;
    text-decoration: underline;
  }

  &[href^=tel] {
    color: inherit;
    text-decoration: dotted;
  }
}

// Other sizes to use or @extend
.giga { @include one-element-size(giga); }

.mega { @include one-element-size(mega); }

.kilo { @include one-element-size(kilo); }


// Headings
h1,
.alpha,
h2,
.bravo,
h3,
.charlie,
h4,
.delta,
h5,
.echo,
h6,
.foxtrot {
  clear: both;
  color: palette(mono, 75);
}

h1,
.alpha {
  @include one-element-size(h1);
}

h2,
.bravo {
  @include one-element-size(h2);
  font-weight: $font-weight-bold;
}

h3,
.charlie {
  @include one-element-size(h3);
}

h4,
.delta {
  @include one-element-size(h4);
  font-weight: $font-weight-bold;
}

%base-rwd-size {
  @include one-element-size();
}

h5,
.echo {
  @extend %base-rwd-size;
  font-weight: $font-weight-bold;
  letter-spacing: .03125em;
  text-transform: uppercase;
}

h6,
.foxtrot {
  @extend %base-rwd-size;
  font-weight: $font-weight-bold;
}

// Set a fluid size for block-level content elements
p,
li,
dt,
dd,
th,
td,
address,
input,
button,
select,
textarea {
  @extend %base-rwd-size;
}

// Set the vertical rhythm for block-level containers
p,
ul,
ol,
dl,
address,
form,
figure,
table {
  margin-bottom: $vert-line-height;
}

// Nested lists should not have margin bottom
ol ol,
ul ul,
ul ol,
ol ul {
  margin-bottom: 0;
}

.micro { @include one-element-size(micro); }

// Block level elements
blockquote {
  quotes: none;
  position: relative;

  p {
    color: palette(mono);
    font-style: italic;
    padding-left: em(32);
  }

  p::before,
  p:last-child::after {
    color: palette(brand);
    font-family: $font-serif;
    font-size: rem(48);
    font-style: italic;
    font-weight: $font-weight-bold;
    line-height: 1;
  }

  p::before {
    content: "“";
    position: absolute;
      top: 0; left: .0625em;
  }

  p:last-child::after {
    content: "”";
    display: inline;
    line-height: 0;
    margin-left: .125em;
    vertical-align: text-bottom;
  }
}

hr {
  border: none;
  border-top: 1px solid palette(mono, 25);
  height: 0;
  line-height: 1;
  margin: $vert-line-height 0;
  width: 100%;
}

ul,
ol {
  margin-left: 1.5rem;
}

// scss-lint:disable MergeableSelector
ul { list-style: square; }

ul ul { list-style: disc; }

ul ul ul { list-style: circle; }

ol { list-style: decimal; }

ol ol { list-style: upper-alpha; }

ol ol ol { list-style: upper-roman; }

ol ol ol ol { list-style: lower-alpha; }

ol ol ol ol ol { list-style: lower-roman; }
// scss-lint:enable MergeableSelector

dl { border-top: 1px solid $color-borders; }

dt,
dd {
  border-left: 1px solid $color-borders;
  border-right: 1px solid $color-borders;
  padding: .75em 1em .5625em;
}

dt {
  border-bottom: 1px dotted $color-borders;
  font-weight: $font-weight-bold;
}

dd {
  border-bottom: 2px solid $color-borders;
}

figure {}

table {
  @if $table-border-collapse == true {
    border-collapse: collapse;
  }
  border-spacing: 0;
  width: 100%;

  th {
    border-bottom: 2px solid $table-border-color;
    padding: $table-cell-padding;
    text-align: left;
  }

  td {
    border-top: 1px solid $table-border-color;
    padding: $table-cell-padding;
  }

  caption {
    text-align: center;
  }

  // zebra striping pattern
  tbody {

    tr:nth-of-type(odd) {
      background-color: $table-border-color;
    }
  }
}

// Inline typography elements
strong,
b,
em,
i,
cite,
small,
sup,
sub {
  letter-spacing: .03125em;
}

sub,
sup {
  font-size: 75%;
  line-height: 1;
  position: relative;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

abbr[title] {
  font-size: 75%;
  font-weight: $font-weight-bold;
  letter-spacing: 0.125em;
  text-transform: uppercase;
}

var {
  color: palette(mono, 75);
  display: inline-block;
  padding: 0 .125em;
}

// Proper code blocks need to be surrounded by a <pre>. They work together.
pre {
  white-space: pre-wrap;
  word-wrap: break-word; // For IE 5.5+ and up

  code {
    border-bottom: 1px solid palette(mono, 25);
    border-left: 5px solid $color-code;
    border-radius: 0;
    display: block;
    margin: 0;
    padding: 1.375em 1.25em 1.3125em;
  }
}

code,
kbd,
samp,
mark,
ins {
  display: inline-block;
  line-height: 1.5;
  padding: .125em .25em 0;
}

code,
kbd,
samp {
  background: rgba(#000, .05);
  border-radius: $default-border-radius;
  box-shadow: 0 0 .25em rgba(#000, .1) inset;
  font-family: $font-mono;
}

code {
  color: $color-code;
}

mark {
  background-color: #ff9; // yellow
}

strike,
s {
  color: palette(mono, 25);
}

del {
  color: $color-error;
}

ins {
  background-color: palette(mono, 25);
  text-decoration: none;
}

small {
  font-size: 87.5%;
}

// These should change depending on the language
[lang="en-US"] {

  q {
    display: inline;

    ::before { content: "“"; }

    ::after {
      content: "”";
      white-space: nowrap;
    }

    // Nested
    q::before { content: "‘"; }

    q::after { content: "’"; }
  }
}


.vertical-grid {
  // Debug vertical rhythm
  // scss-lint:disable UrlFormat
  background-image: url('http://basehold.it/i/31/cc0000');
  background-position: 0 8px;
  // scss-lint:enable UrlFormat
}